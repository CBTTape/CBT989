/*                                                                  rexx
  Use the WFMSET data to update input file(s), then run named program
  Parm: programname dd1 .. ddn
*/
 var.=''

 arg pgm rest
 parse var rest . 'EDIT('edlist')' . 0 . 'PARM('prm')' .
 if pgm='' then exit xmsg('Pgm parm missing',8)
 if edlist='' then exit xmsg('EDIT parm missing',8)

 /* parse WFMSET member, make var-list */
 "execio * diskr wfmset (finis)"
 do queued()
   pull r
   if left(r,3)<>'// ' | pos(' SET ',r)=0 then iterate
   parse var r . . name'='val .
   name=strip(name)
   if val="''" then iterate
   zz=value('var.'name,val)
 end

 /* add REXX globals                   */
 Interpret WfmRxSet('pfx(var.)')

 /* read and modify input files, one after the other */
 do ddn=1 to words(edlist)
   dd=word(edlist,ddn)
   "execio * diskr" dd "(stem file. finis)"
   /* reallocate libref to temp */
   cc=bpxwdyn('free dd('dd')')
   cc=bpxwdyn('alloc dd('dd') new delete unit(vio) space(1,1) tracks',
      'recfm(f,b) lrecl(80)')
   if cc<>0 then exit xmsg('Alloc dd' dd 'rc' cc,8)
   do fn=1 to file.0
   /*say left(dd,8) 'I' file.fn */
     do while pos('&',file.fn)>0
       parse var file.fn front '&' rest
       p=Verify(rest,xrange('A','Z')'0123456789','n')
       parse var rest v =(p) rest
       if left(rest,1)='.' then rest=substr(rest,2)
       file.fn=front || var.v || rest
     end
   /*say left(dd,8) 'O' file.fn  */
   end
   "execio" file.0 "diskw" dd "(stem file. finis)"
 end

 /* finally run program */
 address AttchMvs pgm prm
 cc=rc

 /* release resources (not really neccessary) */
 do ddn=1 to words(edlist)
   cc=bpxwdyn('free dd('word(edlist,ddn)')')
 end
 exit xmsg(pgm 'run rc' cc,cc)

XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 0,1)
